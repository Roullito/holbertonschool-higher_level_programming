The ``MyList`` module
======================
Using ``MyList``
----------------
This is a doctest file for the MyList class.
First import the class from the module:
    >>> MyList = __import__('1-my_list').MyList
Now use it:
Create a MyList instance:
    >>> my_list = MyList()
    >>> type(my_list)
    <class '1-my_list.MyList'>
Check that it inherits from list:
    >>> isinstance(my_list, list)
    True
Add some elements:
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]
Print sorted (original list unchanged):
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]
Test with empty list:
    >>> empty_list = MyList()
    >>> empty_list.print_sorted()
    []
Test with single element:
    >>> single_list = MyList()
    >>> single_list.append(42)
    >>> single_list.print_sorted()
    [42]
Test with negative numbers:
    >>> neg_list = MyList()
    >>> neg_list.append(-1)
    >>> neg_list.append(5)
    >>> neg_list.append(-10)
    >>> neg_list.append(0)
    >>> neg_list.print_sorted()
    [-10, -1, 0, 5]
Test with duplicates:
    >>> dup_list = MyList()
    >>> dup_list.append(3)
    >>> dup_list.append(1)
    >>> dup_list.append(3)
    >>> dup_list.append(1)
    >>> dup_list.print_sorted()
    [1, 1, 3, 3]
Test initialization with values:
    >>> init_list = MyList([3, 1, 4, 1, 5])
    >>> init_list.print_sorted()
    [1, 1, 3, 4, 5]
    >>> print(init_list)
    [3, 1, 4, 1, 5]
